---
- summary: |
    Проверка входа существующего пользователя с корректными почтой и паролем
  requirement: |
    Пользователь должен войти в систему
  prerequisites: |
    Должна быть открыта главная страница сайта
  test-data: |
    Email: user@yandex.ru
    Password: Rx2b#wsn8%
  steps: 
    - Нажимаем на кнопку "Sign in"
    - Вводим почту
    - Вводим пароль
    - Нажимаем на кнопку "Submit"
  expected-result: |
    Пользователь должен попасть на основную страницу сайта для зарегистрированных пользователей

- summary: |
    Проверка недопустимости входа пользователя с несуществующей почтой
  requirement: |
    Пользователь должен увидеть сообщение о том, что пользователя с данной электронной почтой не существует
  prerequisites: |
    Должна быть открыта главная страница сайта
  test-data: |
    Email: user@elemail.com
    Password: Rx2b#wsn8%
  steps: 
    - Нажимаем на кнопку "Sign in"
    - Вводим почту
    - Вводим пароль
    - Нажимаем на кнопку "Submit"
  expected-result: |
    Пользователь должен получить сообщение об отсутствии пользователя с указанной электронной почтой

- summary: |
    Проверка недопустимости входа пользователя с неверным паролем
  requirement: |
    Пользователь должен увидеть сообщения о том, что указан неверный пароль
  prerequisites: |
    Должна быть открыта главная страница сайта
  test-data: |
    Email: user@yandex.ru
    Password: EhEhEhEh2@
  steps:
    - Нажимаем на кнопку "Sign in"
    - Вводим почту
    - Вводим пароль
    - Нажимаем на кнопку "Submit"
  expected-result: |
    Пользователь должен получить сообщение о том, что введен неверный пароль

- summary: |
    Проверка регистрации пользователя на сайте
  requirement: |
    Пользователь должен создать учетную запись на сайте
  prerequisites: |
    Должна быть открыта главная страница сайта
  test-data: |
    Nickname: User
    Email: user@yandex.ru(при повторном выполнении тест-кейса необходимо указать другую почту)
    Password: Rx2b#wsn8%
    Password Confirmation: Rx2b#wsn8%
  steps: 
    - Нажимаем на кнопку "Sign up"
    - Вводим Имя пользователя
    - Вводим почту
    - Вводим пароль
    - Вводим подтверждение пароля
    - Нажимаем на кнопку "Submit"
  expected-result: |
    Пользователь попадает на основную страницу сайта для зарегистрированных пользователей

- summary: |
    Проверка выхода пользователя из его учетной записи
  requirement: |
    Происходит выход пользователя из его аккаунта
  prerequisites: |
    Должна быть открыта основная страница сайта для зарегистрированных пользователей, пользователь должен быть авторизован
  test-data: |
    no data
  steps: 
    - Нажимаем на аватар пользователя
    - Нажимаем на кнопку "Sign Out"
  expected-result: |
    Пользователь попадает на главную страницу сайта

- summary: |
    Проверка создания матча с ботом
  requirement: |
    Начинается матч с ботом
  prerequisites: |
    Открыта основная страница сайта для зарегистрированных пользователей, пользователь авторизован
  test-data: |
    Level: 1
    Game Type: With a bot
    Time control: 10 Min
    Поле "Choose task by name or tags": power_calculator
  steps: 
    - Нажимаем кнопку "CREATE A GAME"
    - Выбираем сложность
    - Выбираем тип игры
    - Выбираем ограничение времени матча
    - Выбираем задание
    - Нажимаем кнопку "Create battle"
  expected-result: |
    Начинается матч против бота

- summary: |
    Проверка работы кнопки оповещающей о приглашении к игре
  requirement: |
    Появляется уведомление о наличии или отсутствии приглашений к игре
  prerequisites: |
    Открыта основная страница сайта для зарегистрированных пользователей, пользователь авторизован
  test-data: |
    no data
  steps: 
    - Нажимаем на кнопку со знаком двух скрещенных мечей
  expected-result: |
    Появляется сообщение об отсутствии приглашений к игре

- summary: |
    Проверка недопустимости восстановления пароля для пользователя с несуществующей почтой
  requirement: |
    Появляется сообщение об отсутствии на сайте аккаунта пользователя с указанной почтой
  prerequisites: |
    Открыта главная страница сайта
  test-data: |
    Email: w@w.ru
  steps: 
    - Нажимаем кнопку "Sign in"
    - Нажимаем на предложение "Forgot your password?"
    - Вводим почту
    - Нажимаем кнопку "Submit"
  expected-result: |
    Появляется сообщение об отсутствии на сайте учетной записи с указанной почтой

- summary: |
    Проверка восстановления пароля для существующего в системе пользователя
  requirement: |
    Появляется сообщение об отправке на указанной почту инструкции по восстановлению пароля
  prerequisites: |
    Открыта главная страница сайта
  test-data: |
    Email: user@mail.ru
  steps: 
    - Нажимаем кнопку "Sign in"
    - Нажимаем на предложение "Forgot your password?"
    - Вводим почту
    - Нажимаем кнопку "Submit"
  expected-result: |
    Появляется уведомление об отправке на указанную почту письма с инструкциями по восстановлению пароля

- summary: |
    Проверка функционирования шапки основной части страницы
  requirement: |
    Все разделы отображаются в читаемом виде без дефектов
  prerequisites: |
    Открыта основная страница сайта, пользователь авторизован
  test-data: |
    no data
  steps: 
    - Нажимаем на кнопку "Tournaments"
    - Нажимаем на кнопку "History"
    - Нажимаем на кнопку "Lobby"
  expected-result: |
    Все разделы соответствуют их названиям, удобны к изучению и профессионально оформлены

- summary: |    
    Проверка функционирования шапки блока "Leaderboard" страницы
  requirement: |
    Все разделы отображаются в удобном и читаемом виде
  prerequisites: |
    Открыта основная страница сайта, пользователь авторизован
  test-data: |
    no data
  steps: 
    - Нажимаем кнопку "Month"
    - Нажимаем кнопку "All"
    - Нажимаем кнопку "Week"
  expected-result: |
    Показываются списки лидеров за Месяц, все время и за неделю. Списки отображаются без дефектов и в удобном для чтения виде
    
- summary: |
    Проверка создания матча против пользователя, присутствующего на сайте
  requirement: |
    Начинается матч с другим пользователем
  prerequisites: |
    Открыта основная страница сайта, пользователь авторизован
  test-data: |
    Level: 1
    Game Type: With other user
    Time Control: 10 Min
    Поле "Choose task by name or tags": squares_and_cubes
    Язык: Node.js
  steps: 
    - Нажимаем кнопку "Create a game"
    - Выбираем уровень
    - Выбираем тип игры
    - Выбираем максимальное время игры
    - Выбираем задачу
    - Нажимаем кнопку "Create battle"
  expected-result: | 
    Появляется индикатор матча в лобби, когда присоединяется другой игрок начинается матч

- summary: |
    Проверка присоединения к матчу другого игрока
  requirement: |
    Начинается матч, к которому присоединяемся
  prerequisites: |
    Открыта главная страница сайта, пользователь авторизован
  test-data: |
    Матч, показывающийся в лобби
    Язык: Node.js
  steps: 
    - Нажимаем кнопку "Сражаться"
  expected-result: |
    Начинается матч, к которому мы подключились

- summary: | 
    Проверка создания матча против друга
  requirement: |  
    Отправляется приглашение выбранному пользователю
  prerequisites: |
    Открыта главная страница сайта, пользователь авторизован
  test-data: |
    Level: 1
    Game Type: With a friend
    Time control: 10 Min
    Choose opponent: Hawadi, либо никнейм другого пользователя сайта
    Поле "Choose task by name or tags": Squares_or_cubes
  steps:
    - Нажимаем кнопку "Create a game"
    - Выбираем уровень
    - Выбираем тип игры
    - Выбираем максимальное время игры
    - Выбираем игрока которого пригласим в игру
    - Выбираем задачу
    - Нажимаем кнопку "Create Invite"
  expected-result: |
    Игроку, которого мы пригласили, отправляется уведомление о приглашении на матч. Созданное приглашение появляется у нас в аккаунте в раскрывающемся меню вкладки приглашений(кнопка со скрещенными мечами)

- summary: |
    Проверка работы поля ввода кода во время процесса игры
  requirement: |
    Часть кода уже есть в поле, при вводе кода не возникает проблем
  prerequisites: |
    Открыта главная страница сайта, пользователь авторизован
  test-data: |
    Level: 1
    Game Type: With a bot
    Time control: 10 Min
    Поле "Choose task by name or tags": maximum_triangle_edge
    Язык: Node.js
  steps:
    - Нажимаем кнопку "Create a game"
    - Выбираем уровень
    - Выбираем тип игры
    - Выбираем максимальное время игры
    - Выбираем задачу
    - Нажимаем кнопку "Create battle"
    - Вводим решение в поле с кодом между уже имеющимися фрагментами кода в месте, предназаченном для добавления в это место решения  
  expected-result: |
    Часть кода уже есть в поле, при вводе кода в место, предназначенное для решения, не возникает сложностей и проблем

- summary: |
    Проверка функционирования ресурса при победе в матче
  requirement: |
    Появляется окно с сообщением о победе в игре, окно можно закрыть, а при закрытии остается страница матча и код игрока и противника
  prerequisites: |
    Открыта основная страница сайта, пользователь авторизован
  test-data: |
    Level: 2
    Game Type: with a bot
    Time Control: 10 Min 
    Поле "Choose task by name or tags": balance
    Язык: Node.js
  steps:
    - Нажимаем кнопку "Create a game"
    - Выбираем уровень
    - Выбираем тип игры
    - Выбираем максимальное время игры
    - Выбираем задачу
    - Нажимаем кнопку "Create battle"
    - Вводим решение в отведенное для того место
    - Нажимаем кнопку запуска написанной программы
  expected-result: |
    Появляется окно с сообщением о выигрыше в игре. Есть кнопка закрытия окна. После закрытия страница с матчем и кодом остается

- summary: |
    Проверка функционирования ресурса при поражении в матче
  requirement: |  
    Выводится окно с уведомлением о поражении. Окно можно закрыть, с закрытием окна остается страница с игрой и кодом игрока и соперника
  prerequisites: |
    Открыта основная страница сайта, пользователь авторизован
  test-data: |
    Level: 2
    Game type: with a bot
    Time control: 10 Min
    Поле "Choose task by name or tags": balance
    Язык: Node.js
  steps:
    - Нажимаем кнопку "Create a game"
    - Выбираем уровень
    - Выбираем тип игры
    - Выбираем максимальное время игры
    - Выбираем задачу
    - Нажимаем кнопку "Create battle"
    - Ждем пока соперник по игре решит задачу
  expected-result: |
    Возникает окно с уведомлением о поражении, возможностью закрытия. При закрытии остается окно игры

- summary: |
    Проверка функционирования ресурса при завершении игры по таймеру
  requirement: |
    Появляется уведомления о истечении времени игры с возможностью закрытия. При закрытии остается страница матча и код обоих игроков - пользователя и соперника
  prerequisites: |
    Открыта основная страница сайта, пользователь авторизован
  test-data: |
    Level: 2
    Game type: with a bot
    Time control: 5 Min
    Поле "Choose task by name or tags": balance
    Язык: Node.js
  steps:
    - Нажимаем кнопку "Start a battle"
    - Выбираем сложность
    - Выбираем тип игры
    - Выбираем максимальное время матча
    - Выбираем задачу
    - Нажимаем "Create battle", выбрав все параметры матча
    - Ждём пока истечет время игры и матч закончится до того, как мы или противник решили задание матча
  expected-result: |
    Появляется уведомление об истечении времени матча. Мы можем закрыть уведомление и вернуться на страницу игры

- summary: |
    Проверка работы ресурса при нажатии на кнопку активирующую возможность сдаться в матче
  requirement: |
    Появляется уведомление о том, что игрок сдался в матче
  prerequisites: |
    Открыта главная страница, выполнен вход в систему
  test-data: |
    Level: 2
    Game type: with a bot
    Time control: 10 Min
    Поле "Choose task by name or tags": balance
    Язык: Node.js
  steps:
    - Нажимаем на кнопку "Start a battle"
    - Выбираем уровень
    - Выбираем тип игры
    - Выбираем максимальное время игры
    - Выбираем задачу
    - Нажимаем на кнопку "Create battle"
    - Нажимаем на кнопку, активирующую возможность сдаться в текущем матче
    - При необходимости подтверждаем намерение сдаться
  expected-result: |
    Появляется уведомление о том, что мы сдались в матче, мы прибавляем плюс одну сдачу в статистику
    
    
